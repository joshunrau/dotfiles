# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh" 
ZSH_THEME="powerlevel10k/powerlevel10k"

plugins=(
  dotenv
  git
  npm
  nvm
  pyenv
  virtualenv
  zsh-autosuggestions
  zsh-syntax-highlighting
)

zstyle ':omz:update' mode disabled
source $ZSH/oh-my-zsh.sh

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Load p10k
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# User configuration
export DISABLE_AUTO_UPDATE="true"
export PATH=$PATH:~/.local/bin
export EDITOR=micro

# Aliases 
alias edit=$EDITOR
alias caa-home="communauto-alert $HOME_LATITUDE $HOME_LONGITUDE"
alias caa-work="communauto-alert $WORK_LATITUDE $WORK_LONGITUDE"

# Functions
cicws43() {
	case "$1" in
	  shell)
	    sshpass -p ${CIC_PASSWORD} ssh -t -p 46572 ${CIC_USERNAME}@${CIC_GATEWAY} "sshpass -p ${CIC_PASSWORD} ssh cicws43"
	    ;;
	  tunnel)
	    remotePort=$2
	  	localPort=$3
	  	if [[ -z "$remotePort" ]]; then
	  	  echo "Must specify remote port"
	  	  return 1
	  	elif [[ ! "$remotePort" =~ '^[0-9]+$' ]]; then
	      echo "Invalid remote port: ${remotePort}"
	      return 1
	    elif [[ -z "$localPort" ]]; then
	      localPort=$remotePort
	    elif [[ ! "$localPort" =~ '^[0-9]+$' ]]; then
	      echo "Invalid local port: ${localPort}"
	      return 1
	    fi
	    sshpass -p ${CIC_PASSWORD} ssh -p 46572 -N -L ${localPort}:cicws43:${remotePort} ${CIC_USERNAME}@${CIC_GATEWAY}
	    ;;
	  *)
	    echo "Usage: $0 {shell|tunnel}"
	    ;;
	esac
}
